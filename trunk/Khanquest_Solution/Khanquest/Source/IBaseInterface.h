/////////////////////////////////////////////////////////////
//	File	:	"IBaseInterface.h"
//
//	Author	:	Sean Hamstra (SH)
//
//	Purpose	:	Defines a set of functions that all objects
//				that inherit from the class must implement.
/////////////////////////////////////////////////////////////

#pragma once

class IBaseInterface
{
public:
	////////////////////////////////////////////
	//	Function:	"~IBaseInterface(Destructor)"
	//	Last Modified: July 18, 2008
	//	Purpose:	Allow children to derive
	////////////////////////////////////////////
	virtual ~IBaseInterface(void) = 0 {}

	//////////////////////////////////////////////////////
	//	Function: “Update”
	//	Last Modified: July 18, 2008
	//	Purpose: To update object
	//////////////////////////////////////////////////////
	virtual void Update(float fElapsedTime) = 0;

	//////////////////////////////////////////////////////
	//	Function: “Render”
	//	Last Modified: July 18, 2008
	//	Purpose: To render object
	//////////////////////////////////////////////////////
	virtual void Render(float fElapsedTime) = 0;

	//////////////////////////////////////////////////////
	//	Function: “AddRef”
	//	Last Modified: July 18, 2008
	//	Purpose: To increase reference counter
	//////////////////////////////////////////////////////
	virtual void AddRef(void) = 0; 

	//////////////////////////////////////////////////////
	//	Function: “Release”
	//	Last Modified: July 18, 2008
	//	Purpose: To decrease reference counter
	//			And delete self if no more references
	//////////////////////////////////////////////////////
	virtual void Release(void) = 0;

};